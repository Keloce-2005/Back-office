# Generated by Django 5.1.7 on 2025-03-23 16:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('depart', models.CharField(max_length=255)),
                ('arrivee', models.CharField(max_length=255)),
                ('date_depart', models.DateTimeField()),
                ('date_arrivee', models.DateTimeField()),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('en_cours', 'En cours'), ('terminee', 'Terminée'), ('annulee', 'Annulée')], default='active', max_length=20)),
                ('type_annonce', models.CharField(choices=[('colis', 'Colis'), ('service', 'Service à la personne')], default='colis', max_length=20)),
                ('poids', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entrepot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('adresse', models.TextField()),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=10)),
                ('capacite_totale', models.IntegerField()),
                ('est_bureau', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('type_service', models.CharField(choices=[('transport', 'Transport de personnes'), ('courses', 'Courses'), ('achat_etranger', "Achat à l'étranger"), ('garde_animaux', "Garde d'animaux"), ('travaux', 'Petits travaux'), ('autre', 'Autre')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BoxStockage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=10)),
                ('capacite', models.DecimalField(decimal_places=2, max_digits=6)),
                ('tarif_jour', models.DecimalField(decimal_places=2, max_digits=6)),
                ('disponible', models.BooleanField(default=True)),
                ('entrepot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to='dashboard.entrepot')),
            ],
        ),
        migrations.CreateModel(
            name='Livraison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=10, unique=True)),
                ('description_colis', models.TextField()),
                ('poids', models.DecimalField(decimal_places=2, max_digits=6)),
                ('dimensions', models.CharField(blank=True, max_length=100)),
                ('date_prise_en_charge', models.DateTimeField()),
                ('date_livraison_prevue', models.DateTimeField()),
                ('date_livraison_reelle', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('en_attente', 'En attente'), ('en_cours', 'En cours'), ('livree', 'Livrée'), ('annulee', 'Annulée')], default='en_attente', max_length=20)),
                ('code_validation', models.CharField(max_length=6)),
                ('trajet_complet', models.TextField(blank=True, help_text='Étapes intermédiaires du trajet', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraisons', to='dashboard.annonce')),
                ('box_stockage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='livraisons', to='dashboard.boxstockage')),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stripe_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('en_attente', 'En attente'), ('reussi', 'Réussi'), ('echoue', 'Échoué'), ('rembourse', 'Remboursé')], default='en_attente', max_length=20)),
                ('mode_paiement', models.CharField(choices=[('carte', 'Carte bancaire'), ('virement', 'Virement bancaire'), ('portefeuille', 'Portefeuille EcoDeli')], default='carte', max_length=20)),
                ('date_paiement', models.DateTimeField(auto_now_add=True)),
                ('livraison', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='dashboard.livraison')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='dashboard.service')),
            ],
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('pdf_file', models.FileField(upload_to='factures/')),
                ('date_emission', models.DateTimeField(auto_now_add=True)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status_paiement', models.CharField(choices=[('en_attente', 'En attente'), ('reussi', 'Réussi'), ('echoue', 'Échoué'), ('rembourse', 'Remboursé')], default='en_attente', max_length=20)),
                ('paiement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='facture', to='dashboard.paiement')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Administrateur'), ('livreur', 'Livreur'), ('client', 'Client'), ('commercant', 'Commerçant'), ('prestataire', 'Prestataire')], default='client', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('pays', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='dashboard_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='dashboard_user_permission_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='prestataire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services_offerts', to='dashboard.user'),
        ),
        migrations.CreateModel(
            name='Prestataire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialites', models.CharField(max_length=255)),
                ('tarif_horaire', models.DecimalField(decimal_places=2, max_digits=6)),
                ('disponible', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prestataire_profile', to='dashboard.user')),
            ],
        ),
        migrations.CreateModel(
            name='PieceJustificative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_piece', models.CharField(choices=[('id_card', "Carte d'identité"), ('driving_license', 'Permis de conduire'), ('proof_address', 'Justificatif de domicile'), ('professional_card', 'Carte professionnelle'), ('insurance', "Attestation d'assurance"), ('other', 'Autre')], max_length=20)),
                ('fichier', models.FileField(upload_to='documents/justificatifs/')),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('validee', models.BooleanField(default=False)),
                ('commentaire_validation', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces_justificatives', to='dashboard.user')),
            ],
        ),
        migrations.AddField(
            model_name='paiement',
            name='beneficiaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements_recus', to='dashboard.user'),
        ),
        migrations.AddField(
            model_name='paiement',
            name='payeur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements_effectues', to='dashboard.user'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('lue', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='dashboard.user')),
            ],
        ),
        migrations.CreateModel(
            name='LogConnexion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_connexion', models.DateTimeField(auto_now_add=True)),
                ('adresse_ip', models.GenericIPAddressField()),
                ('navigateur', models.CharField(max_length=255)),
                ('systeme_exploitation', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_connexion', to='dashboard.user')),
            ],
        ),
        migrations.CreateModel(
            name='Livreur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('vehicle_type', models.CharField(blank=True, max_length=50, null=True)),
                ('id_card', models.FileField(blank=True, null=True, upload_to='documents/id_cards/')),
                ('driving_license', models.FileField(blank=True, null=True, upload_to='documents/driving_licenses/')),
                ('disponible', models.BooleanField(default=True)),
                ('zones_livraison', models.TextField(blank=True, help_text='Zones de livraison préférées', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='livreur_profile', to='dashboard.user')),
            ],
        ),
        migrations.AddField(
            model_name='livraison',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraisons_recues', to='dashboard.user'),
        ),
        migrations.AddField(
            model_name='livraison',
            name='livreur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraisons_effectuees', to='dashboard.user'),
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('date_evaluation', models.DateTimeField(auto_now_add=True)),
                ('livraison', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='dashboard.livraison')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='dashboard.service')),
                ('evaluateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_donnees', to='dashboard.user')),
                ('evalue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_recues', to='dashboard.user')),
            ],
        ),
        migrations.CreateModel(
            name='Contrat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('document', models.FileField(upload_to='contrats/')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('actif', 'Actif'), ('expire', 'Expiré'), ('resilie', 'Résilié'), ('en_attente', 'En attente de signature')], default='en_attente', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contrats', to='dashboard.user')),
            ],
        ),
        migrations.CreateModel(
            name='Commercant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('siret', models.CharField(max_length=14)),
                ('company_address', models.TextField()),
                ('contract_signed', models.BooleanField(default=False)),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='contracts/')),
                ('contract_start_date', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('contract_type', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='commercant_profile', to='dashboard.user')),
            ],
        ),
        migrations.CreateModel(
            name='CalendrierDisponibilite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('disponible', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilites', to='dashboard.user')),
            ],
        ),
        migrations.AddField(
            model_name='annonce',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annonces', to='dashboard.user'),
        ),
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_abonnement', models.CharField(choices=[('free', 'Free'), ('starter', 'Starter'), ('premium', 'Premium')], default='free', max_length=10)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('actif', models.BooleanField(default=True)),
                ('prix_mensuel', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abonnements', to='dashboard.user')),
            ],
        ),
    ]
